{"version":3,"sources":["components/LoginButton.js","components/AppHeader.js","views/Home.js","components/PostEditor.js","views/PostsManager.js","components/ItemEditor.js","views/ItemsManager.js","components/ChecklistEditor.js","views/ChecklistManager.js","App.js","serviceWorker.js","index.js"],"names":["LoginButton","state","authenticated","user","menuAnchorEl","login","_this","props","auth","logout","handleMenuClose","handleMenuOpen","event","setState","currentTarget","this","checkAuthentication","isAuthenticated","getUser","_this$state","react_default","a","createElement","index_es","color","onClick","menuPosition","vertical","horizontal","icons_index_es","anchorEl","anchorOrigin","transformOrigin","open","onClose","primary","secondary","name","Component","withAuth","withStyles","flex","_ref","classes","position","variant","component","Link","to","className","components_LoginButton","Home","react","heroUnit","heroContent","align","gutterBottom","paragraph","heroButtons","container","spacing","justify","item","classNames","layout","cardGrid","sm","md","lg","card","cardMedia","image","title","cardContent","compose","withRouter","theme","appBar","icon","marginRight","unit","backgroundColor","palette","background","paper","maxWidth","margin","padding","concat","marginTop","Object","defineProperty","width","marginLeft","breakpoints","up","height","display","flexDirection","paddingTop","flexGrow","footer","modal","alignItems","justifyContent","modalCard","modalCardContent","post","onSave","history","react_final_form_es","initialValues","onSubmit","_ref2","handleSubmit","goBack","_ref3","input","assign","label","autoFocus","_ref4","multiline","rows","size","type","API","process","REACT_APP_API","PostsManager","loading","posts","savePost","_callee","regenerator_default","wrap","_context","prev","next","id","fetch","getPosts","stop","renderPostEditor","match","params","find","Number","components_PostEditor","Redirect","method","endpoint","body","JSON","stringify","getAccessToken","content-type","accept","authorization","headers","response","json","console","error","_context2","t9","window","confirm","_this2","length","elevation","orderBy","map","key","button","updatedAt","moment","fromNow","deletePost","aria-label","fab","Route","exact","path","render","bottom","right","down","ItemsManager","items","saveItem","getItems","renderItemEditor","components_ItemEditor","deleteItem","checklistitem","ChecklistManager","checklistitems","checkbox","checked","saveChecklistItem","getChecklistItems","renderChecklistEditor","components_ChecklistEditor","handleToggle","currentIndex","indexOf","newChecked","toConsumableArray","push","splice","index","tabIndex","disableRipple","deleteChecklistItem","main","components_AppHeader","dist","ImplicitCallback","Boolean","location","hostname","oktaConfig","issuer","redirect_uri","origin","client_id","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.506c9164.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    IconButton,\n    Menu,\n    MenuItem,\n    ListItemText,\n} from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport { withAuth } from '@okta/okta-react';\n\nclass LoginButton extends Component {\n    state = {\n        authenticated: null,\n        user: null,\n        menuAnchorEl: null,\n    };\n\n    componentDidUpdate() {\n        this.checkAuthentication();\n    }\n\n    componentDidMount() {\n        this.checkAuthentication();\n    }\n\n    async checkAuthentication() {\n        const authenticated = await this.props.auth.isAuthenticated();\n        if (authenticated !== this.state.authenticated) {\n            const user = await this.props.auth.getUser();\n            this.setState({ authenticated, user });\n        }\n    }\n\n    login = () => this.props.auth.login();\n    logout = () => {\n        this.handleMenuClose();\n        this.props.auth.logout();\n    };\n\n    handleMenuOpen = event => this.setState({ menuAnchorEl: event.currentTarget });\n    handleMenuClose = () => this.setState({ menuAnchorEl: null });\n\n    render() {\n        const { authenticated, user, menuAnchorEl } = this.state;\n\n        if (authenticated == null) return null;\n        if (!authenticated) return <Button color=\"inherit\" onClick={this.login}>Login</Button>;\n\n        const menuPosition = {\n            vertical: 'top',\n            horizontal: 'right',\n        };\n\n        return (\n        <div>\n            <IconButton onClick={this.handleMenuOpen} color=\"inherit\">\n            <AccountCircle />\n            </IconButton>\n            <Menu\n            anchorEl={menuAnchorEl}\n            anchorOrigin={menuPosition}\n            transformOrigin={menuPosition}\n            open={!!menuAnchorEl}\n            onClose={this.handleMenuClose}\n            >\n            <MenuItem onClick={this.logout}>\n                <ListItemText\n                primary=\"Logout\"\n                secondary={user && user.name}\n                />\n            </MenuItem>\n            </Menu>\n        </div>\n        );\n    }\n}\n\nexport default withAuth(LoginButton);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    AppBar,\n    Button,\n    Toolbar,\n    Typography,\n    withStyles,\n} from '@material-ui/core';\nimport LoginButton from './LoginButton';\n\nconst styles = {\n    flex: {\n        flex: 1,\n    },\n};\n\nconst AppHeader = ({ classes }) => (\n    <AppBar position=\"static\">\n        <Toolbar>\n            <Typography variant=\"title\" color=\"inherit\">\n                GroceryRun\n            </Typography>\n            <Button color=\"inherit\" component={Link} to=\"/\">Home</Button>\n{/*             <Button color=\"inherit\" component={Link} to=\"/posts\">Grocery Lists</Button>\n            <Button color=\"inherit\" component={Link} to=\"/items\">Items Manager</Button> */}\n            <Button color=\"inherit\" component={Link} to=\"/checklistitems\">Grocery List</Button>\n            <div className={classes.flex} />\n            <LoginButton />\n        </Toolbar>\n    </AppBar>\n);\n \nexport default withStyles(styles)(AppHeader);","import React, { Component, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { withAuth } from '@okta/okta-react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n    withStyles,\n    Typography,\n    Button,\n    Grid,\n    Card,\n    CardMedia,\n    CardContent,\n} from '@material-ui/core';\nimport { compose } from 'recompose';\n\nconst styles = theme => ({\n    appBar: {\n        position: 'relative',\n    },\n    icon: {\n        marginRight: theme.spacing.unit * 2,\n    },\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    heroContent: {\n        maxWidth: 600,\n        margin: '0 auto',\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n            width: 1100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    cardGrid: {\n        padding: `${theme.spacing.unit * 8}px 0`,\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing.unit * 6,\n    },\n});\n\n\n\n\nclass Home extends Component {\n\n    state = {\n        authenticated: null,\n        user: null,\n        menuAnchorEl: null,\n    };\n\n    componentDidUpdate() {\n        this.checkAuthentication();\n    }\n\n    componentDidMount() {\n        this.checkAuthentication();\n    }\n\n    async checkAuthentication() {\n        const authenticated = await this.props.auth.isAuthenticated();\n        if (authenticated !== this.state.authenticated) {\n            const user = await this.props.auth.getUser();\n            this.setState({ authenticated, user });\n        }\n    }\n\n    login = () => this.props.auth.login();\n\n\n\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n\n            <Fragment>\n\n                <main>\n\n                    {/* Hero unit */}\n                    <div className={classes.heroUnit}>\n                        <div className={classes.heroContent}>\n\n                            <Typography variant=\"display1\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                Welcome to GroceryRun\n                            </Typography>\n                            <Typography align=\"center\" color=\"textSecondary\" paragraph>\n                                An application for users to create grocery lists and share with others in real-time.\n                            </Typography>\n\n                            <div className={classes.heroButtons}>\n                                <Grid container spacing={16} justify=\"center\">\n                                    <Grid item>\n                                        <Button variant=\"contained\" color=\"primary\" onClick={this.login}>\n                                            Sign up\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div className={classNames(classes.layout, classes.cardGrid)}>\n\n                    {/* End hero unit */}\n                        <Grid container spacing={40}>\n\n                            <Grid item sm={6} md={4} lg={3}>\n                                <Card className={classes.card}>\n                                    <CardMedia\n                                        className={classes.cardMedia}\n/*                                         image={require('../public/assets/images/shop.png')} */\n                                        image={\"http://claireelise.co/wp-content/uploads/2019/02/share-1.png\"}\n                                        title=\"Image title\"\n                                    />\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography variant=\"title\" gutterBottom>\n                                            Create\n                                        </Typography>\n                                        <Typography>\n                                            Running out of milk again? Start a grocery list to refer to later on your run to the store.\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n\n                            <Grid item sm={6} md={4} lg={3}>\n                                <Card className={classes.card}>\n                                    <CardMedia\n                                        className={classes.cardMedia}\n/*                                         image={require('../public/assets/images/shop.png')} */\n                                        image={\"http://claireelise.co/wp-content/uploads/2019/02/mark.png\"}\n                                        title=\"Image title\"\n                                    />\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography variant=\"title\" gutterBottom>\n                                            Share\n                                        </Typography>\n                                        <Typography>\n                                            Share your grocery list with multiple people who can all mark items off in real-time.\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n\n                            <Grid item sm={6} md={4} lg={3}>\n                                <Card className={classes.card}>\n                                    <CardMedia\n                                        className={classes.cardMedia}\n/*                                         image={require('../public/assets/images/shop.png')} */\n                                        image={\"http://claireelise.co/wp-content/uploads/2019/02/shop.png\"}\n                                        title=\"Image title\"\n                                    />\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography variant=\"title\" gutterBottom>\n                                            Shop\n                                        </Typography>\n                                        <Typography>\n                                            Grab some helpers and make your grocery run faster and easier than ever before.\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n\n                        </Grid>\n\n                    </div>\n\n                </main>\n\n            </Fragment>\n            \n        );\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default compose(\n    withAuth,\n    withRouter,\n    withStyles(styles),\n)(Home);","import React from 'react';\nimport {\n    withStyles,\n    Card,\n    CardContent,\n    CardActions,\n    Modal,\n    Button,\n    TextField,\n} from '@material-ui/core';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\n\nconst styles = theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    modalCard: {\n        width: '90%',\n        maxWidth: 500,\n    },\n    modalCardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    marginTop: {\n        marginTop: 2 * theme.spacing.unit,\n    },\n});\n\nconst PostEditor = ({ classes, post, onSave, history }) => (\n    <Form initialValues={post} onSubmit={onSave}>\n        {({ handleSubmit }) => (\n        <Modal\n            className={classes.modal}\n            onClose={() => history.goBack()}\n            open\n        >\n            <Card className={classes.modalCard}>\n            <form onSubmit={handleSubmit}>\n                <CardContent className={classes.modalCardContent}>\n                    <Field name=\"title\">\n                        {({ input }) => <TextField label=\"Title\" autoFocus {...input} />}\n                    </Field>\n                    <Field name=\"body\">\n                        {({ input }) => (\n                        <TextField\n                            className={classes.marginTop}\n                            label=\"Body\"\n                            multiline\n                            rows={4}\n                            {...input}\n                        />\n                        )}\n                    </Field>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\" type=\"submit\">Save</Button>\n                    <Button size=\"small\" onClick={() => history.goBack()}>Cancel</Button>\n                </CardActions>\n            </form>\n            </Card>\n        </Modal>\n        )}\n    </Form>\n);\n\nexport default compose(\n    withRouter,\n    withStyles(styles),\n)(PostEditor);","import React, { Component, Fragment } from 'react';\nimport { withAuth } from '@okta/okta-react';\nimport { withRouter, Route, Redirect, Link } from 'react-router-dom';\nimport {\n    withStyles,\n    Typography,\n    Button,\n    IconButton,\n    Paper,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n} from '@material-ui/core';\nimport { Delete as DeleteIcon, Add as AddIcon } from '@material-ui/icons';\nimport moment from 'moment';\nimport { find, orderBy } from 'lodash';\nimport { compose } from 'recompose';\n\nimport PostEditor from '../components/PostEditor';\n\nconst styles = theme => ({\n    posts: {\n        marginTop: 2 * theme.spacing.unit,\n    },\n    fab: {\n        position: 'absolute',\n        bottom: 3 * theme.spacing.unit,\n        right: 3 * theme.spacing.unit,\n        [theme.breakpoints.down('xs')]: {\n            bottom: 2 * theme.spacing.unit,\n            right: 2 * theme.spacing.unit,\n        },\n    },\n});\n\nconst API = process.env.REACT_APP_API || 'http://localhost:3001';\n\nclass PostsManager extends Component {\n    state = {\n        loading: true,\n        posts: [],\n    };\n\n    componentDidMount() {\n        this.getPosts();\n    }\n\n    async fetch(method, endpoint, body) {\n        try {\n        const response = await fetch(`${API}${endpoint}`, {\n            method,\n            body: body && JSON.stringify(body),\n            headers: {\n                'content-type': 'application/json',\n                accept: 'application/json',\n                authorization: `Bearer ${await this.props.auth.getAccessToken()}`,\n            },\n        });\n        return await response.json();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    async getPosts() {\n        this.setState({ loading: false, posts: await this.fetch('get', '/posts') });\n    }\n\n    savePost = async (post) => {\n        if (post.id) {\n            await this.fetch('put', `/posts/${post.id}`, post);\n        } else {\n            await this.fetch('post', '/posts', post);\n        }\n\n        this.props.history.goBack();\n        this.getPosts();\n    }\n\n    async deletePost(post) {\n        if (window.confirm(`Are you sure you want to delete \"${post.title}\"`)) {\n            await this.fetch('delete', `/posts/${post.id}`);\n            this.getPosts();\n        }\n    }\n\n    renderPostEditor = ({ match: { params: { id } } }) => {\n        if (this.state.loading) return null;\n        const post = find(this.state.posts, { id: Number(id) });\n\n        if (!post && id !== 'new') return <Redirect to=\"/posts\" />;\n\n        return <PostEditor post={post} onSave={this.savePost} />;\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n\n            <Fragment>\n                <Typography variant=\"display1\">Grocery Lists</Typography>\n                {this.state.posts.length > 0 ? (\n                    <Paper elevation={1} className={classes.posts}>\n                        <List>\n                        {orderBy(this.state.posts, ['updatedAt', 'title'], ['desc', 'asc']).map(post => (\n                            <ListItem key={post.id} button component={Link} to={`/posts/${post.id}`}>\n                            <ListItemText\n                                primary={post.title}\n                                secondary={post.updatedAt && `Updated ${moment(post.updatedAt).fromNow()}`}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton onClick={() => this.deletePost(post)} color=\"inherit\">\n                                <DeleteIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                            </ListItem>\n                        ))}\n                        </List>\n                    </Paper>\n                ) : (\n                !this.state.loading && <Typography variant=\"subheading\">No posts to display</Typography>\n                )}\n                <Button\n                    variant=\"fab\"\n                    color=\"secondary\"\n                    aria-label=\"add\"\n                    className={classes.fab}\n                    component={Link}\n                    to=\"/posts/new\"\n                    >\n                    <AddIcon />\n                </Button>\n                <Route exact path=\"/posts/:id\" render={this.renderPostEditor} />\n            </Fragment>\n            \n        );\n    }\n}\n\nexport default compose(\n    withAuth,\n    withRouter,\n    withStyles(styles),\n)(PostsManager);","import React from 'react';\nimport {\n    withStyles,\n    Card,\n    CardContent,\n    CardActions,\n    Modal,\n    Button,\n    TextField,\n} from '@material-ui/core';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\n\nconst styles = theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    modalCard: {\n        width: '90%',\n        maxWidth: 500,\n    },\n    modalCardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    marginTop: {\n        marginTop: 2 * theme.spacing.unit,\n    },\n});\n\n\n\n\n/* START 'post' changed to 'item' */\nconst ItemEditor = ({ classes, item, onSave, history }) => (\n\n    <Form initialValues={item} onSubmit={onSave}>\n{/*     END 'post' changed to 'item' */}\n\n\n\n\n        {({ handleSubmit }) => (\n        <Modal\n            className={classes.modal}\n            onClose={() => history.goBack()}\n            open\n        >\n            <Card className={classes.modalCard}>\n            <form onSubmit={handleSubmit}>\n                <CardContent className={classes.modalCardContent}>\n                <Field name=\"title\">\n                    {({ input }) => <TextField label=\"Title\" autoFocus {...input} />}\n                </Field>\n                <Field name=\"body\">\n                    {({ input }) => (\n                    <TextField\n                        className={classes.marginTop}\n                        label=\"Body\"\n                        multiline\n                        rows={2}\n                        {...input}\n                    />\n                    )}\n                </Field>\n                </CardContent>\n                <CardActions>\n                <Button size=\"small\" color=\"primary\" type=\"submit\">Save</Button>\n                <Button size=\"small\" onClick={() => history.goBack()}>Cancel</Button>\n                </CardActions>\n            </form>\n            </Card>\n        </Modal>\n        )}\n    </Form>\n\n);\n\nexport default compose(\n    withRouter,\n    withStyles(styles),\n)(ItemEditor);","import React, { Component, Fragment } from 'react';\nimport { withAuth } from '@okta/okta-react';\nimport { withRouter, Route, Redirect, Link } from 'react-router-dom';\nimport {\n    withStyles,\n    Typography,\n    Button,\n    IconButton,\n    Paper,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n} from '@material-ui/core';\nimport { Delete as DeleteIcon, Add as AddIcon } from '@material-ui/icons';\nimport moment from 'moment';\nimport { find, orderBy } from 'lodash';\nimport { compose } from 'recompose';\n\nimport ItemEditor from '../components/ItemEditor';\n\nconst styles = theme => ({\n    items: {\n        marginTop: 2 * theme.spacing.unit,\n    },\n    fab: {\n        position: 'absolute',\n        bottom: 3 * theme.spacing.unit,\n        right: 3 * theme.spacing.unit,\n        [theme.breakpoints.down('xs')]: {\n        bottom: 2 * theme.spacing.unit,\n        right: 2 * theme.spacing.unit,\n        },\n    },\n});\n\nconst API = process.env.REACT_APP_API || 'http://localhost:3001';\n\nclass ItemsManager extends Component {\n    state = {\n        loading: true,\n        items: [],\n    };\n\n    componentDidMount() {\n        this.getItems();\n    }\n\n    async fetch(method, endpoint, body) {\n        try {\n        const response = await fetch(`${API}${endpoint}`, {\n            method,\n            body: body && JSON.stringify(body),\n            headers: {\n                'content-type': 'application/json',\n                accept: 'application/json',\n                authorization: `Bearer ${await this.props.auth.getAccessToken()}`,\n            },\n        });\n        return await response.json();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    async getItems() {\n        this.setState({ loading: false, items: await this.fetch('get', '/items') });\n    }\n\n    saveItem = async (item) => {\n        if (item.id) {\n            await this.fetch('put', `/items/${item.id}`, item);\n        } else {\n            await this.fetch('post', '/items', item);\n        }\n\n        this.props.history.goBack();\n        this.getItems();\n    }\n\n    async deleteItem(item) {\n        if (window.confirm(`Are you sure you want to delete \"${item.title}\"`)) {\n            await this.fetch('delete', `/items/${item.id}`);\n            this.getItems();\n        }\n    }\n\n    renderItemEditor = ({ match: { params: { id } } }) => {\n        if (this.state.loading) return null;\n        const item = find(this.state.items, { id: Number(id) });\n\n        if (!item && id !== 'new') return <Redirect to=\"/items\" />;\n\n        return <ItemEditor item={item} onSave={this.saveItem} />;\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n\n            <Fragment>\n                <Typography variant=\"display1\">Items Manager</Typography>\n\n                {this.state.items.length > 0 ? (\n                    <Paper elevation={1} className={classes.items}>\n                        <List>\n                        {orderBy(this.state.items, ['updatedAt', 'title'], ['desc', 'asc']).map(item => (\n                            <ListItem key={item.id} button component={Link} to={`/items/${item.id}`}>\n                            <ListItemText\n                                primary={item.title}\n                                secondary={item.updatedAt && `Updated ${moment(item.updatedAt).fromNow()}`}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton onClick={() => this.deleteItem(item)} color=\"inherit\">\n                                <DeleteIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                            </ListItem>\n                        ))}\n                        </List>\n                    </Paper>\n                ) : (\n                !this.state.loading && <Typography variant=\"subheading\">No items to display</Typography>\n                )}\n\n                <Button\n                    variant=\"fab\"\n                    color=\"secondary\"\n                    aria-label=\"add\"\n                    className={classes.fab}\n                    component={Link}\n                    to=\"/items/new\"\n                    >\n                    <AddIcon />\n                </Button>\n\n                <Route exact path=\"/items/:id\" render={this.renderItemEditor} />\n            </Fragment>\n            \n        );\n    }\n}\n\nexport default compose(\n    withAuth,\n    withRouter,\n    withStyles(styles),\n)(ItemsManager);","import React from 'react';\nimport {\n    withStyles,\n    Card,\n    CardContent,\n    CardActions,\n    Modal,\n    Button,\n    TextField,\n} from '@material-ui/core';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\n\nconst styles = theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    modalCard: {\n        width: '90%',\n        maxWidth: 500,\n    },\n    modalCardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    marginTop: {\n        marginTop: 2 * theme.spacing.unit,\n    },\n});\n\n\nconst ChecklistEditor = ({ classes, checklistitem, onSave, history }) => (\n\n    <Form initialValues={checklistitem} onSubmit={onSave}>\n        {({ handleSubmit }) => (\n        <Modal\n            className={classes.modal}\n            onClose={() => history.goBack()}\n            open\n        >\n            <Card className={classes.modalCard}>\n            <form onSubmit={handleSubmit}>\n                <CardContent className={classes.modalCardContent}>\n                <Field name=\"body\">\n                    {({ input }) => (\n                    <TextField\n                        className={classes.marginTop}\n                        label=\"Add Item\"\n                        multiline\n                        rows={2}\n                        {...input}\n                    />\n                    )}\n                </Field>\n                </CardContent>\n                <CardActions>\n                <Button size=\"small\" color=\"primary\" type=\"submit\">Save</Button>\n                <Button size=\"small\" onClick={() => history.goBack()}>Cancel</Button>\n                </CardActions>\n            </form>\n            </Card>\n        </Modal>\n        )}\n    </Form>\n\n);\n\nexport default compose(\n    withRouter,\n    withStyles(styles),\n)(ChecklistEditor);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withAuth } from '@okta/okta-react';\nimport { withRouter, Route, Redirect, Link } from 'react-router-dom';\nimport {\n    withStyles,\n    Typography,\n    Button,\n    IconButton,\n    Paper,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n    Checkbox\n} from '@material-ui/core';\nimport { Delete as DeleteIcon, Add as AddIcon, Create as CreateIcon } from '@material-ui/icons';\nimport { find } from 'lodash';\nimport { compose } from 'recompose';\n\nimport ChecklistEditor from '../components/ChecklistEditor';\n\nconst styles = theme => ({\n    checklistitems: {\n        marginTop: 2 * theme.spacing.unit,\n    },\n    fab: {\n        position: 'absolute',\n        bottom: 3 * theme.spacing.unit,\n        right: 3 * theme.spacing.unit,\n        [theme.breakpoints.down('xs')]: {\n            bottom: 2 * theme.spacing.unit,\n            right: 2 * theme.spacing.unit,\n        },\n    },\n});\n\nconst API = process.env.REACT_APP_API || 'http://localhost:3001';\n\nclass ChecklistManager extends Component {\n\n    state = {\n        loading: true,\n        checklistitems: [\n            { body: '', checkbox: false },\n        ],\n        checked: [0]\n    };\n\n    componentDidMount() {\n        this.getChecklistItems();\n    }\n\n    async fetch(method, endpoint, body) {\n        try {\n        const response = await fetch(`${API}${endpoint}`, {\n            method,\n            body: body && JSON.stringify(body),\n            headers: {\n                'content-type': 'application/json',\n                accept: 'application/json',\n                authorization: `Bearer ${await this.props.auth.getAccessToken()}`,\n            },\n        });\n        return await response.json();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    async getChecklistItems() {\n        this.setState({ loading: false, checklistitems: await this.fetch('get', '/checklistitems') });\n    }\n\n    saveChecklistItem = async (checklistitem) => {\n        if (checklistitem.id) {\n            await this.fetch('put', `/checklistitems/${checklistitem.id}`, checklistitem);\n        } else {\n            await this.fetch('post', '/checklistitems', checklistitem);\n        }\n\n        this.props.history.goBack();\n        this.getChecklistItems();\n    }\n\n    async deleteChecklistItem(checklistitem) {\n        if (window.confirm(`Are you sure you want to delete \"${checklistitem.body}\"`)) {\n            await this.fetch('delete', `/checklistitems/${checklistitem.id}`);\n            this.getChecklistItems();\n        }\n    }\n\n    renderChecklistEditor = ({ match: { params: { id } } }) => {\n        if (this.state.loading) return null;\n        const checklistitem = find(this.state.checklistitems, { id: Number(id) });\n\n        if (!checklistitem && id !== 'new') return <Redirect to=\"/checklistitems\" />;\n\n        return <ChecklistEditor checklistitem={checklistitem} onSave={this.saveChecklistItem} />;\n    };\n\n    handleToggle = checklistitem => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(checklistitem);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n        newChecked.push(checklistitem);\n        } else {\n        newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n            checked: newChecked,\n        });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n\n            <Fragment>\n\n                <Typography variant=\"display1\">Grocery List</Typography>\n\n                {this.state.checklistitems.length > 0 ? (\n\n                    <Paper elevation={1} className={classes.checklistitems}>\n\n                        <List>\n                            { this.state.checklistitems.map( (checklistitem, index) => \n                                <ListItem key={checklistitem.id} button>\n                                    <Checkbox\n                                    onClick={this.handleToggle(checklistitem)}\n                                    checked={this.props.handleToggle}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    />\n                                    <ListItemText primary={checklistitem.body} />\n                                    <ListItemSecondaryAction>\n                                    <IconButton key={checklistitem.id} button component={Link} to={`/checklistitems/${checklistitem.id}`} color=\"inherit\">\n                                            <CreateIcon />\n                                        </IconButton>\n                                        <IconButton onClick={() => this.deleteChecklistItem(checklistitem)} color=\"inherit\">\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )}\n                        </List>\n\n                    </Paper>\n\n                ) : (\n                !this.state.loading && <Typography variant=\"subheading\">No checklist items to display</Typography>\n                )}\n\n                <Button\n                    variant=\"fab\"\n                    color=\"secondary\"\n                    aria-label=\"add\"\n                    className={classes.fab}\n                    component={Link}\n                    to=\"/checklistitems/new\"\n                    >\n                    <AddIcon />\n                </Button>\n                \n                <Route exact path=\"/checklistitems/:id\" render={this.renderChecklistEditor} />\n\n            </Fragment>\n\n        );\n    }\n}\n\nChecklistManager.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default compose(\n    withAuth,\n    withRouter,\n    withStyles(styles),\n)(ChecklistManager);","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport { SecureRoute, ImplicitCallback } from '@okta/okta-react';\nimport {\n    CssBaseline,\n    withStyles,\n} from '@material-ui/core';\n\nimport AppHeader from './components/AppHeader';\nimport Home from './views/Home';\nimport PostsManager from './views/PostsManager';\nimport ItemsManager from './views/ItemsManager';\nimport ChecklistManager from './views/ChecklistManager';\n\nconst styles = theme => ({\n    main: {\n        padding: 3 * theme.spacing.unit,\n        [theme.breakpoints.down('xs')]: {\n        padding: 2 * theme.spacing.unit,\n        },\n    },\n});\n\nconst App = ({ classes }) => (\n\n    <Fragment>\n\n        <CssBaseline />\n        <AppHeader />\n\n        <main className={classes.main}>\n            <Route exact path=\"/\" component={Home} />\n            <SecureRoute exact path=\"/posts\" component={PostsManager} />\n            <SecureRoute exact path=\"/items\" component={ItemsManager} />\n            <SecureRoute exact path=\"/checklistitems\" component={ChecklistManager} />\n            <Route path=\"/implicit/callback\" component={ImplicitCallback} />\n        </main>\n\n    </Fragment>\n    \n);\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Security } from '@okta/okta-react';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst oktaConfig = {\n    issuer: `${process.env.REACT_APP_OKTA_ORG_URL}/oauth2/default`,\n    redirect_uri: `${window.location.origin}/implicit/callback`,\n    client_id: process.env.REACT_APP_OKTA_CLIENT_ID,\n};\n\nReactDOM.render(\n    <BrowserRouter>\n        <Security {...oktaConfig}>\n        <App />\n        </Security>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) module.hot.accept();"],"sourceRoot":""}